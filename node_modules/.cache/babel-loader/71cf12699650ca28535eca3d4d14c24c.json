{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\PFINALF3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useReducer, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined); //declarar estados iniciales\n//aplicacion reducer\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  //estados reducer\n  const [dentList, setDentList] = useState([]);\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(user => setDentList(user));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      dentList,\n      setDentList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"g17EcqJCu9lguuLo2k/mZrQdk5k=\");\n\n_c = ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useReducer","useEffect","ContextGlobal","undefined","ContextProvider","children","dentList","setDentList","url","fetch","then","res","json","user","useContextGlobal"],"sources":["C:/Users/User/Desktop/PFINALF3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useState, useReducer, useEffect} from \"react\";\r\n\r\n\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\n\r\n//declarar estados iniciales\r\n\r\n//aplicacion reducer\r\n\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n  //estados reducer\r\n  const [dentList, setDentList] = useState([])\r\n\r\n  const url = 'https://jsonplaceholder.typicode.com/users'\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(user => setDentList(user))\r\n    }, [])\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{dentList, setDentList}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n \r\nexport const useContextGlobal = () => useContext(ContextGlobal) \r\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,UAA9C,EAA0DC,SAA1D,QAA0E,OAA1E;;AAIA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAACM,SAAD,CAAnC,C,CAGP;AAEA;;AAGA,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EAEA,MAAMS,GAAG,GAAG,4CAAZ;EAEEP,SAAS,CAAC,MAAM;IACZQ,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIN,WAAW,CAACM,IAAD,CAFzB;EAGH,CAJQ,EAIN,EAJM,CAAT;EAMF,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACP,QAAD;MAAWC;IAAX,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAlBM;;GAAMD,e;;KAAAA,e;AAoBb,OAAO,MAAMU,gBAAgB,GAAG;EAAA;;EAAA,OAAMhB,UAAU,CAACI,aAAD,CAAhB;AAAA,CAAzB;;IAAMY,gB"},"metadata":{},"sourceType":"module"}