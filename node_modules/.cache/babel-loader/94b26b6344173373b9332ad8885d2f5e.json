{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\PFINALF3\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined); //declarar estados iniciales\n\nconst initialApiState = []; //aplicacion reducer\n\nconst apiReducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_DENT':\n      return action.payload;\n\n    default:\n      throw new Error();\n  }\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  //estados reducer\n  const [apiState, apiDispatch] = useReducer(apiReducer, initialApiState);\n  const url = '';\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"siqlNa0e02nS2pHzuhzd/e68kjg=\");\n\n_c = ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useReducer","initialState","theme","data","ContextGlobal","undefined","initialApiState","apiReducer","state","action","type","payload","Error","ContextProvider","children","apiState","apiDispatch","url","useContextGlobal"],"sources":["C:/Users/User/Desktop/PFINALF3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useState, useReducer} from \"react\";\r\n\r\nexport const initialState = {theme: \"\", data: []}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\n\r\n//declarar estados iniciales\r\n  \r\n  const initialApiState =[]\r\n\r\n\r\n//aplicacion reducer\r\n\r\n  const apiReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'GET_DENT':\r\n            return action.payload\r\n        default:\r\n            throw new Error()\r\n    }\r\n  }\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n  //estados reducer\r\n  const [apiState, apiDispatch] = useReducer(apiReducer, initialApiState)\r\n\r\n\r\n  const url = ''\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\nexport const useContextGlobal =() => useContext(ContextGlobal); \r\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,UAA9C,QAA+D,OAA/D;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACQ,SAAD,CAAnC,C,CAGP;;AAEE,MAAMC,eAAe,GAAE,EAAvB,C,CAGF;;AAEE,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACpC,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,UAAL;MACI,OAAOD,MAAM,CAACE,OAAd;;IACJ;MACI,MAAM,IAAIC,KAAJ,EAAN;EAJR;AAMD,CAPD;;AASF,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,UAAU,CAACO,UAAD,EAAaD,eAAb,CAA1C;EAGA,MAAMW,GAAG,GAAG,EAAZ;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE,EAA/B;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAbM;;GAAMD,e;;KAAAA,e;AAcb,OAAO,MAAMK,gBAAgB,GAAE;EAAA;;EAAA,OAAMpB,UAAU,CAACM,aAAD,CAAhB;AAAA,CAAxB;;IAAMc,gB"},"metadata":{},"sourceType":"module"}